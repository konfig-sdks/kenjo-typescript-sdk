/*
Kenjo API

Before starting to use the Kenjo API, you have to request the API activation for a sandbox or production environment to the Kenjo Customer Success team. After that, an admin user has to go to *Settings > Integrations > API keys*, to generate the **API Key**. Follow the steps described in the **Autentication section** of this document. <br>The API key is needed to request the bearer token. Each endpoint callout requires a valid bearer token in the Authorization header. Once the token is retrieved, it will be useful during the time limit indicated by the 'expiration date'.

The version of the OpenAPI document: 1.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"


/**
 * 
 * @export
 * @interface CustomFieldsGetListResponseDataInner
 */
export interface CustomFieldsGetListResponseDataInner {
    /**
     * The Kenjo _id of the custom field.
     * @type {string}
     * @memberof CustomFieldsGetListResponseDataInner
     */
    '_id'?: string;
    /**
     * The name of custom field section.
     * @type {string}
     * @memberof CustomFieldsGetListResponseDataInner
     */
    'section'?: string;
    /**
     * The name of custom field label.
     * @type {string}
     * @memberof CustomFieldsGetListResponseDataInner
     */
    'label'?: string;
    /**
     * The api name is a required identifier to perform POST and PUT operations with employees.
     * @type {string}
     * @memberof CustomFieldsGetListResponseDataInner
     */
    'apiName'?: string;
    /**
     * The data type of the custom field. Possible values \"Text\", \"TextArea\", \"List\", \"Date\", \"Number\", \"Email\", \"Boolean\" and \"Url\"
     * @type {string}
     * @memberof CustomFieldsGetListResponseDataInner
     */
    'type'?: string;
    /**
     * If the field is type \'List\' then a list with the possible values will be provided.
     * @type {Array<string>}
     * @memberof CustomFieldsGetListResponseDataInner
     */
    'values'?: Array<string>;
}

