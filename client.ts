/*
Kenjo API

Before starting to use the Kenjo API, you have to request the API activation for a sandbox or production environment to the Kenjo Customer Success team. After that, an admin user has to go to *Settings > Integrations > API keys*, to generate the **API Key**. Follow the steps described in the **Autentication section** of this document. <br>The API key is needed to request the bearer token. Each endpoint callout requires a valid bearer token in the Authorization header. Once the token is retrieved, it will be useful during the time limit indicated by the 'expiration date'.

The version of the OpenAPI document: 1.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  AreasApi,
  AttendanceApi,
  AuthenticationApi,
  CalendarsApi,
  CompaniesApi,
  CompensationApi,
  CustomFieldsApi,
  DepartmentsApi,
  EmployeesApi,
  OfficesApi,
  TeamsApi,
  TimeOffApi,
  UserAccountsApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { KenjoCustom } from "./client-custom";

export class Kenjo extends KenjoCustom {
  readonly areas: AreasApi;
  readonly attendance: AttendanceApi;
  readonly authentication: AuthenticationApi;
  readonly calendars: CalendarsApi;
  readonly companies: CompaniesApi;
  readonly compensation: CompensationApi;
  readonly customFields: CustomFieldsApi;
  readonly departments: DepartmentsApi;
  readonly employees: EmployeesApi;
  readonly offices: OfficesApi;
  readonly teams: TeamsApi;
  readonly timeOff: TimeOffApi;
  readonly userAccounts: UserAccountsApi;

  constructor(configurationParameters: ConfigurationParameters = {}) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.areas = new AreasApi(configuration);
    this.attendance = new AttendanceApi(configuration);
    this.authentication = new AuthenticationApi(configuration);
    this.calendars = new CalendarsApi(configuration);
    this.companies = new CompaniesApi(configuration);
    this.compensation = new CompensationApi(configuration);
    this.customFields = new CustomFieldsApi(configuration);
    this.departments = new DepartmentsApi(configuration);
    this.employees = new EmployeesApi(configuration);
    this.offices = new OfficesApi(configuration);
    this.teams = new TeamsApi(configuration);
    this.timeOff = new TimeOffApi(configuration);
    this.userAccounts = new UserAccountsApi(configuration);
  }

}
